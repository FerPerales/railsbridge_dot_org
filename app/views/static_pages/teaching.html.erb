<h1>Want to teach technologies?</h1>

<h2>Important Links</h2>
<p>Most everything you need to teach can be found at <a href="http://docs.railsbridge.org">docs.railsbridge.org</a>. All the curricula and the installfest instructions are there.
<p>See something that could be better? Submit a pull request -- the whole shebang is in RailsBridge's Docs repo on GitHub: <a href="https://github.com/railsbridge/docs">https://github.com/railsbridge/docs</a>

<h2>Teacher Training</h2>
<p>You should go to a teacher training!</p>

<%= render 'mailing-list' %>

<h2>Advice on Teaching Beginners</h2>
<div>You&#8217;ll probably be working with people who may not even be familiar with using their terminal (or had their very first taste of using the terminal at the InstallFest the previos night) and won&#8217;t understand intuitively why certain commands are worded the way they are.  When you&#8217;re teaching beginners, the goal is not necessarily to get through the curriculum, but rather to provide a good grounding in what programming is and how it works â€” and to get them excited about the possibilities programming offers.</div>
<p>Think ahead of time about how you would explain the following:</p>
<ul>
<li>What&#8217;s a program? Operating system?</li>
<li>What&#8217;s a framework?
<ul>
<li>something that makes it faster to build an application because it contains most of the things you would commonly write</li>
</ul>
</li>
<li>Workflow &#8211; how do you write a program?
<ul>
<li>Learn about customer&#8217;s requirements -&gt; translate to &#8220;stories&#8221;</li>
<li>Pick a story that seems doable and start writing code that does it</li>
<li>Show your work to the customer, get feedback</li>
<li>Based on feedback, adjust stories (customer&#8217;s &#8220;up front&#8221; requirements vs. changes once they see something working)</li>
<li>Once story is finished, go back to &#8220;pick a story&#8221;&#8230;keep going until you&#8217;re done! (This is an example of looping!)</li>
</ul>
</li>
<li>Basic programming structures &#8211; or, how to do the &#8220;start writing code&#8221; step
<ul>
<li>variables &#8211; words that hold information</li>
<li>types of information &#8211; text, numbers, collections</li>
<li>operators &#8211; doing stuff with variables</li>
<li>loops &#8211; doing the same action a bunch of times</li>
<li>printing &#8211; to the screen, or to a file</li>
</ul>
</li>
<li>Writing a simple program
<ul>
<li>opening the editor</li>
<li>opening the command line</li>
<li>adding two numbers together, storing in a variable</li>
<li>printing variable to the screen</li>
<li>save and run</li>
</ul>
</li>
</ul>